[
  {
    "type": "impl",
    "name": "PredictionHubImpl",
    "interface_name": "stakcast::interface::IPredictionHub"
  },
  {
    "type": "struct",
    "name": "core::byte_array::ByteArray",
    "members": [
      {
        "name": "data",
        "type": "core::array::Array::<core::bytes_31::bytes31>"
      },
      {
        "name": "pending_word",
        "type": "core::felt252"
      },
      {
        "name": "pending_word_len",
        "type": "core::integer::u32"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::option::Option::<(core::felt252, core::integer::u128)>",
    "variants": [
      {
        "name": "Some",
        "type": "(core::felt252, core::integer::u128)"
      },
      {
        "name": "None",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "enum",
    "name": "stakcast::types::Outcome",
    "variants": [
      {
        "name": "Option1",
        "type": "core::felt252"
      },
      {
        "name": "Option2",
        "type": "core::felt252"
      }
    ]
  },
  {
    "type": "enum",
    "name": "stakcast::types::MarketCategory",
    "variants": [
      {
        "name": "Normal",
        "type": "()"
      },
      {
        "name": "Politics",
        "type": "()"
      },
      {
        "name": "Sports",
        "type": "()"
      },
      {
        "name": "Crypto",
        "type": "()"
      },
      {
        "name": "Business",
        "type": "()"
      },
      {
        "name": "Entertainment",
        "type": "()"
      },
      {
        "name": "Science",
        "type": "()"
      },
      {
        "name": "Other",
        "type": "()"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "enum",
    "name": "stakcast::types::MarketStatus",
    "variants": [
      {
        "name": "Active",
        "type": "()"
      },
      {
        "name": "Locked",
        "type": "()"
      },
      {
        "name": "Resolved",
        "type": "stakcast::types::Outcome"
      },
      {
        "name": "Closed",
        "type": "()"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::option::Option::<core::integer::u8>",
    "variants": [
      {
        "name": "Some",
        "type": "core::integer::u8"
      },
      {
        "name": "None",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "stakcast::types::PredictionMarket",
    "members": [
      {
        "name": "title",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "market_id",
        "type": "core::integer::u256"
      },
      {
        "name": "image_url",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "description",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "choices",
        "type": "(stakcast::types::Outcome, stakcast::types::Outcome)"
      },
      {
        "name": "category",
        "type": "stakcast::types::MarketCategory"
      },
      {
        "name": "is_resolved",
        "type": "core::bool"
      },
      {
        "name": "is_open",
        "type": "core::bool"
      },
      {
        "name": "end_time",
        "type": "core::integer::u64"
      },
      {
        "name": "status",
        "type": "stakcast::types::MarketStatus"
      },
      {
        "name": "winning_choice",
        "type": "core::option::Option::<core::integer::u8>"
      },
      {
        "name": "total_shares_option_one",
        "type": "core::integer::u256"
      },
      {
        "name": "total_shares_option_two",
        "type": "core::integer::u256"
      },
      {
        "name": "total_pool",
        "type": "core::integer::u256"
      },
      {
        "name": "crypto_prediction",
        "type": "core::option::Option::<(core::felt252, core::integer::u128)>"
      }
    ]
  },
  {
    "type": "struct",
    "name": "stakcast::types::BetActivity",
    "members": [
      {
        "name": "choice",
        "type": "core::integer::u8"
      },
      {
        "name": "amount",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "struct",
    "name": "stakcast::types::UserStake",
    "members": [
      {
        "name": "shares_a",
        "type": "core::integer::u256"
      },
      {
        "name": "shares_b",
        "type": "core::integer::u256"
      },
      {
        "name": "total_amount_a",
        "type": "core::integer::u256"
      },
      {
        "name": "total_amount_b",
        "type": "core::integer::u256"
      },
      {
        "name": "total_invested",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "interface",
    "name": "stakcast::interface::IPredictionHub",
    "items": [
      {
        "type": "function",
        "name": "create_predictions",
        "inputs": [
          {
            "name": "title",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "description",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "image_url",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "choices",
            "type": "(core::felt252, core::felt252)"
          },
          {
            "name": "category",
            "type": "core::integer::u8"
          },
          {
            "name": "end_time",
            "type": "core::integer::u64"
          },
          {
            "name": "prediction_market_type",
            "type": "core::integer::u8"
          },
          {
            "name": "crypto_prediction",
            "type": "core::option::Option::<(core::felt252, core::integer::u128)>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_prediction_count",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_prediction",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "stakcast::types::PredictionMarket"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_predictions_by_market_category",
        "inputs": [
          {
            "name": "category",
            "type": "core::integer::u8"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_market_activity",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::BetActivity>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_predictions",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_market_status",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "(core::bool, core::bool)"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_open_markets",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_locked_markets",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_resolved_markets",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_closed_bets_for_user",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_open_bets_for_user",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_locked_bets_for_user",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_bets_for_user",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_user_market_ids",
        "inputs": [
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<core::integer::u256>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_protocol_token",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_betting_restrictions",
        "inputs": [],
        "outputs": [
          {
            "type": "(core::integer::u256, core::integer::u256)"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_market_liquidity",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_total_value_locked",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_active_prediction_markets",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_resolved_prediction_markets",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<stakcast::types::PredictionMarket>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "is_prediction_market_open_for_betting",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "resolve_prediction",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          },
          {
            "name": "winning_choice",
            "type": "core::integer::u8"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "calculate_share_prices",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "(core::integer::u256, core::integer::u256)"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "buy_shares",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          },
          {
            "name": "choice",
            "type": "core::integer::u8"
          },
          {
            "name": "amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_user_stake_details",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          },
          {
            "name": "user",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "stakcast::types::UserStake"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "claim",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_admin",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_fee_recipient",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_fee_recipient",
        "inputs": [
          {
            "name": "recipient",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "toggle_market_status",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          },
          {
            "name": "market_type",
            "type": "core::integer::u8"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "add_moderator",
        "inputs": [
          {
            "name": "moderator",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "remove_all_predictions",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "impl_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "AdditionalAdminImpl",
    "interface_name": "stakcast::admin_interface::IAdditionalAdmin"
  },
  {
    "type": "interface",
    "name": "stakcast::admin_interface::IAdditionalAdmin",
    "items": [
      {
        "type": "function",
        "name": "remove_moderator",
        "inputs": [
          {
            "name": "moderator",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "is_moderator",
        "inputs": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_moderator_count",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u32"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "emergency_pause",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "emergency_unpause",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "pause_market_creation",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "unpause_market_creation",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "pause_betting",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "unpause_betting",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "pause_resolution",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "unpause_resolution",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_time_restrictions",
        "inputs": [
          {
            "name": "min_duration",
            "type": "core::integer::u64"
          },
          {
            "name": "max_duration",
            "type": "core::integer::u64"
          },
          {
            "name": "resolution_window",
            "type": "core::integer::u64"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_platform_fee",
        "inputs": [
          {
            "name": "fee_percentage",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_platform_fee",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "is_paused",
        "inputs": [],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_time_restrictions",
        "inputs": [],
        "outputs": [
          {
            "type": "(core::integer::u64, core::integer::u64, core::integer::u64)"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "is_market_creation_paused",
        "inputs": [],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "is_betting_paused",
        "inputs": [],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "is_resolution_paused",
        "inputs": [],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_oracle_address",
        "inputs": [
          {
            "name": "oracle",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_oracle_address",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_market_stats",
        "inputs": [],
        "outputs": [
          {
            "type": "(core::integer::u256, core::integer::u256, core::integer::u256)"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "emergency_close_market",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "force_close_market",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          },
          {
            "name": "reason",
            "type": "core::byte_array::ByteArray"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "emergency_close_multiple_markets",
        "inputs": [
          {
            "name": "market_ids",
            "type": "core::array::Array::<core::integer::u256>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "emergency_resolve_market",
        "inputs": [
          {
            "name": "market_id",
            "type": "core::integer::u256"
          },
          {
            "name": "winning_choice",
            "type": "core::integer::u8"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "emergency_resolve_multiple_markets",
        "inputs": [
          {
            "name": "market_ids",
            "type": "core::array::Array::<core::integer::u256>"
          },
          {
            "name": "market_types",
            "type": "core::array::Array::<core::integer::u8>"
          },
          {
            "name": "winning_choices",
            "type": "core::array::Array::<core::integer::u8>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_protocol_token",
        "inputs": [
          {
            "name": "token_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_protocol_restrictions",
        "inputs": [
          {
            "name": "min_amount",
            "type": "core::integer::u256"
          },
          {
            "name": "max_amount",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "emergency_withdraw_tokens",
        "inputs": [
          {
            "name": "amount",
            "type": "core::integer::u256"
          },
          {
            "name": "recipient",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "admin",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "fee_recipient",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "pragma_oracle",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "protocol_token",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  }
]
